---
title: "OilVisualisation"
author: "Hew Zhong Xuan, Chuah Chee Jian, Lim Kuan Yong, Tan Ting Xuan Daryl, Kua Dong Han, Chek Yu Ting Amanda"
format: html
editor: visual
---

## Load Required Libraries

```{r}
# Load required libraries
library(tidyverse)
library(readxl)

# For visualisation
library(grid)  # Needed for arrow()
library(ggplot2)
library(sf)
library(cartogram)
library(rnaturalearth)
library(dplyr)
library(countrycode)
library(viridis)
library(ggrepel)
```

## Load Data

```{r}
df <- read_excel("Statistical_Review_of_World_Energy_Data.xlsx", 
                 sheet = "Oil Production - barrels",
                 skip = 2) %>%
  select("Country/Region" = 1, Production_2022 = `2022`)
```

## Data Cleaning

```{r}
df <- df %>%drop_na() %>%
  mutate(across(1, ~ifelse(str_detect(., "of which: OECD"), "OECD", .)))
df
```

```{r}
df_clean <- df %>%
  filter(!str_detect(`Country/Region`, "^Total|^Other|^Non|^OPEC|^OECD|European Union|World|USSR")) %>%
  mutate(
    iso_a3 = countrycode(`Country/Region`, "country.name", "iso3c"),
    continent = case_when(
      iso_a3 %in% c("USA", "CAN", "MEX") ~ "North America",
      iso_a3 %in% c("ARG", "BRA", "COL", "ECU", "GUY", "PER", "TTO", "VEN") ~ "South America",
      iso_a3 %in% c("GBR", "NOR", "DNK", "ITA", "ROU") ~ "Europe",
      iso_a3 %in% c("RUS", "KAZ", "AZE", "TKM", "UZB") ~ "Asia",
      TRUE ~ countrycode(iso_a3, "iso3c", "continent")
    ),
    region = case_when(
      # North America
      iso_a3 %in% c("USA", "CAN", "MEX") ~ "North America",
      
      # South & Central America  
      iso_a3 %in% c("ARG", "BRA", "COL", "ECU", "GUY", "PER", "TTO", "VEN") ~ "South & Central America",
      
      # Europe
      iso_a3 %in% c("DNK", "ITA", "NOR", "ROU", "GBR") ~ "Europe",
      
      # CIS (Commonwealth of Independent States)
      iso_a3 %in% c("AZE", "KAZ", "RUS", "TKM", "UZB") ~ "CIS",
      
      # Middle East
      iso_a3 %in% c("IRN", "IRQ", "KWT", "OMN", "QAT", "SAU", "SYR", "ARE", "YEM") ~ "Middle East",
      
      # Africa
      iso_a3 %in% c("DZA", "AGO", "TCD", "COG") ~ "Africa",
      
      # For any other countries, use continent as fallback
      TRUE ~ continent
    )
  )
df_clean
```

## Visualisation

This is Visualization 1 which incorporates a cartogram with legend on the right side

```{r}
# Loading a base world map
world <- rnaturalearth::ne_countries(scale = "medium", returnclass = "sf")

# Merging the world map with the oil production data
world_data <- left_join(world, df_clean, by = c("iso_a3" = "iso_a3"))

# Transform to a projected coordinate reference system (CRS). In this case, we use the Mercator projection.
world_data_proj <- st_transform(world_data, crs = 3857) %>% 
  filter(!is.na(Production_2022))

# Create continuous area cartogram weighted by Production_2022
carto <- cartogram_cont(world_data_proj, weight = "Production_2022", itermax = 2)

# Calculate centroids for label placement and area for font sizing
centroids <- suppressWarnings(
  carto %>%
  st_centroid() %>%
  mutate(
    visible_area = st_area(geometry) %>% as.numeric(),
    font_size = scales::rescale(visible_area, to = c(2.5, 4))  # adjust scale as needed
  )
)

# Extract coordinates from centroids 
centroids_coords <- centroids %>%
  mutate(
    x = st_coordinates(geometry)[,1],
    y = st_coordinates(geometry)[,2]
  )

# Show the top 15 countries by oil production for labeling
top_labels <- centroids_coords %>%
  mutate(`Country/Region` = ifelse(`Country/Region` == "Russian Federation", "Russia", `Country/Region`)) %>% 
  slice_max(order_by = Production_2022, n = 15)

ggplot(carto) +
  geom_sf(aes(fill = Production_2022), color = "black", linewidth = 0.1) +
  geom_text_repel(
    data = top_labels,
    aes(x = x, y = y, label = `Country/Region`, size = font_size),
    color = "black",
    segment.color = "black",
    segment.size = 0.9,
    segment.alpha = 0.8,
    segment.curvature = 0.1,
    segment.angle = 20,     
    arrow = arrow(length = unit(0.15, "cm"), type = "closed"),
    force = 1.5,
    box.padding = 0.6,
    point.padding = 0.4,
    min.segment.length = unit(0.2, "lines"),  # <- avoid near-zero segments
    max.overlaps = 15,
    bg.color = "white", 
    bg.r = 0.15
  ) +
  scale_size_identity() +
  scale_fill_gradient(
    low = "#deebf7", 
    high = "#08519c",
    name = "Production (barrels)",
    labels = scales::comma
  ) +
  guides(fill = guide_colorbar(
    barwidth = 0.3,   # Slim colorbar
    barheight = 6     # Taller bar to preserve readability
  )) +
  theme_minimal(base_family = "sans") +
  theme(
    plot.title = element_text(size = 16, face = "bold"),
    panel.grid = element_blank(),
    panel.background = element_rect(fill = "#f8f9fa"),
    plot.background = element_rect(fill = "#f8f9fa"),

    # Legend layout on the right but compact
    legend.position = "right",
    legend.title = element_text(size = 8),
    legend.text = element_text(size = 7),
    legend.key.size = unit(0.3, "cm"),
    legend.spacing = unit(0.2, "cm"),
    legend.box.margin = margin(0, 2, 0, 2)
  ) +
  labs(title = "Global Daily Oil Production Cartogram (2022)")
```

This is Visualization 2 which incorporates a cartogram with legend on the bottom

```{r}
# Loading a base world map
world <- rnaturalearth::ne_countries(scale = "medium", returnclass = "sf")

# Merging the world map with the oil production data
world_data <- left_join(world, df_clean, by = c("iso_a3" = "iso_a3"))

# Transform to a projected coordinate reference system (CRS). In this case, we use the Mercator projection.
world_data_proj <- st_transform(world_data, crs = 3857) %>% 
  filter(!is.na(Production_2022))

# Create continuous area cartogram weighted by Production_2022
carto <- cartogram_cont(world_data_proj, weight = "Production_2022", itermax = 5)

# Calculate centroids for label placement and area for font sizing
centroids <- suppressWarnings(
  carto %>%
  st_centroid() %>%
  mutate(
    visible_area = st_area(geometry) %>% as.numeric(),
    font_size = scales::rescale(visible_area, to = c(1.5, 4))  # adjust scale as needed
  )
)

# Extract coordinates from centroids 
centroids_coords <- centroids %>%
  mutate(
    x = st_coordinates(geometry)[,1],
    y = st_coordinates(geometry)[,2]
  )

# Show the top 15 countries by oil production for labeling
top_labels <- centroids_coords %>%
  mutate(`Country/Region` = ifelse(`Country/Region` == "Russian Federation", "Russia", `Country/Region`)) %>% 
  slice_max(order_by = Production_2022, n = 15)

ggplot(carto) +
  geom_sf(aes(fill = Production_2022), color = "black", linewidth = 0.1) +
  geom_text_repel(
    data = top_labels,
    aes(x = x, y = y, label = `Country/Region`, size = font_size),
    color = "black",
    segment.color = "black",
    segment.alpha = 0.8,
    segment.curvature = 0.1,
    segment.angle = 20,
    arrow = arrow(length = unit(0.15, "cm"), type = "closed"),
    force = 2,                              # Push labels away further
    box.padding = 0.6,
    point.padding = 0.4,
    min.segment.length = unit(0.2, "lines"),  # Prevent zero-length segments
    max.overlaps = 15,
    segment.size = 0.75,
    bg.color = "white", 
    bg.r = 0.15
  ) +
  scale_size_identity() +
  scale_fill_gradient(
    low = "#deebf7", 
    high = "#08519c",
    name = "Production (barrels)",
    labels = scales::comma
  ) +
guides(fill = guide_colorbar(
  title.position = "top",
  barwidth = unit(20, "lines"),  # wider
  barheight = unit(0.5, "lines"), # flatter
  title.hjust = 0.5
)) +
theme_minimal(base_family = "sans") +
theme(
  plot.title = element_text(size = 14, face = "bold"),
  panel.grid = element_blank(),
  panel.background = element_rect(fill = "#f8f9fa"),
  plot.background = element_rect(fill = "#f8f9fa"),
  legend.title = element_text(size = 10),
  legend.text = element_text(size = 9),
  legend.key.size = unit(0.3, "cm"),
  legend.position = "bottom",
  plot.margin = margin(20, 30, 20, 30)
) +
  labs(title = "Global Daily Oil Production Cartogram (2022)")
```
